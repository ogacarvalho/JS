é o recurso ao qual vamos utilizar para fazer todos os tipos de métodos de requisição [get, post, create|store, put, delete]

Em services dentro de SRC:
-> crie o arquivo axios.js
-> instale o axios: npm i axios
-> faça a configuração que encurta o endereço da api [rest]


Exemplo: Com react hooks, vamos criar uma requisição no index do login.
O react hooks vai substituir diversos usos da class Component do react. [extend Component] lembra?

-> react.useEffect(() => {}, []);
O array ali após a arrow function, armazenará uma lista de "dependências" no qual a cada mudança de estado de algum item da lista acionará a arrow function, e essa função só será executada uma vez quando o component for montado. [Usaremos ela pra fazer teste com axios]

import axios from '../../services/axios;

export default function Login() {
  React.useEffect(() => {                                   // "Ao carregar o component execute:"
    async function getData() {                              // função pegaDado()
      const response = await axios.get('/alunos');          // reponse recebe dados asíncronos pegos pelo axios get no endereço x.
      const { data } = response;
      console.log(data)
    }

    getData();                                              // Executa.
  }, [])



Portanto

!Todas as requisições a serem feitas, partiram da url principal da api [rest]. 'http://34.151.249.192/'
!Ou seja, é com o axios que vamos de fato consumir o nosso back-end, e com o react vamos "Mostrar" estes dados.
