O Angular é um framework JS que atualiza o DOM ao-vivo. [At runtime].

Módulo
→ Main: Código principal é o primeiro a ser executado, responsável por inicializar o módulo raíz [App.module].
→ App.module: Responsável por agregar e integrar os demais componentes.
→ App.component: É o código que representa e executa o componente como um todo, [seletor, html, css e ts].


Componentes
→ AppComponent é o "core" do angular, é o grande benefício deste framework pois possibilita a criação de um site complexo por partes.
→ O Componente App é o componente raíz, e todos os demais serão "aninhados" nele, de maneira completamente "separável".

Criando um Componente Manualmente:
→ Dentro da pasta App, crie uma nova pasta com o nome do seu componente.
→ Cria o arquivo: A.component.ts [Este arquivo deverá conter a classe (exportável) que representa o componente e o @Component que irá configura-lo para o Angular];
→ O Decorator @Component deverá conter o seletor e o arquivo html [templateUrl: './A.component.html',]
→ Com a base do componente criado, poderá então registra-lo no módulo raíz [app.module] através da importação e adição do mesmo em Declarations.

Criando um Componente Automaticamente (CLI):
→ No terminal: ng generate component nome-do-componente || ng g c nome-do-component


Data Binding [Comunicação/Vinculo de dados]

→ String Interpolation: <p>{{ propriedadeTS }}</p>
    Usado quando queremos apenas mostrar um dado no HTML.

→ Property Binding: <p [propriedadeHTML]="propriedadeTS">...</p>
    Usado quando queremos atribuir um valor como "true" ou "false" de uma propridade TS à uma propriedade HTML.

→ Event Binding: <button (evento)="metodo($event)">
    Usado quando queremos acionar um método em um determinado evento.
    [$event] é o objeto que carrega os dados do evento.

→ Two-Way-Binding: <input [(ngModel)]="propriedadeTS">
    Atualiza tanto a propriedade quanto o elemento automaticamente com o valor digitado durante o evento de input.



Diretivas Básicas [Instruções enviadas diretamente no DOM]
 Geralmente são aplicadas como atributos nos elementos HTML.

→ *ngIf: <seletor *ngIf="propriedade_booleana ou método com qualquer condição que retorne T/F">...</seletor>
    O seletor será mostrado caso a propriedade/método retorne T/F.
    !O asterísco caracteriza que uma *Diretiva Estrutural*

→ ngStyle [Dinâmico]: <seletor [ngStyle]="{propriedade-css: método()}">...</seletor>
    Atribui um determinado estilo de modo dinâmico.
    !O []={} caracteriza o *Property Binding*

→ ngClass [Dinâmico]: <seletor [ngClass]="{class-css: método()/condição_inline}">...</seletor>
    Atribui ou não uma classe CSS caso o método/propriedade retorne T/F.

→ *ngFor: <seletor *ngFor="let elemento of elementos; let i = indexS">...</seletor>
    Cria uma lista de seletores para cada elemento de um array.